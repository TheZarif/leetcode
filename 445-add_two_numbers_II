# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    #Complexity: Time O(n), Space O(n) 
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        a1=[]
        l=l1
        while l is not None:
            a1.append(l)
            l=l.next
        a2=[]
        l=l2
        while l is not None:
            a2.append(l)
            l=l.next
        if len(a1)<len(a2):
            t=a1
            a1=a2
            a2=t
        
        carry=False
        for i in range(1,len(a1)+1):
            s=a1[-i].val
            if carry:
                s+=1
                carry=False
            if i<=len(a2):
                s+=a2[-i].val
            if s>9:
                carry=True
                s%=10
            a1[-i].val=s
        if carry:
            head=ListNode(val=1, next=a1[0])
            return head
        return a1[0]
                
            
            
            
